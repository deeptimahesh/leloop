{"version":3,"file":"component---src-pages-blog-markdown-remark-frontmatter-slug-jsx-11f03057adc01bd44afd.js","mappings":"kKAIe,SAASA,EAAkB,GAAW,IAAX,KAAEC,GAAM,EAChD,MAGMC,EAHQD,EAAKE,kBAAkBC,MAAMC,KAAIC,GAAQA,EAAKC,OAGjCC,QAAO,CAACC,EAAKC,KACtC,MAAMC,EAAOD,EAAKE,YAAYD,KAS9B,OARKF,EAAIE,KACPF,EAAIE,GAAQ,CAAEE,UAAW,KAAMC,QAAS,KAEtCJ,EAAKE,YAAYC,UACnBJ,EAAIE,GAAME,UAAYH,EAEtBD,EAAIE,GAAMG,QAAQC,KAAKL,GAElBD,CAAG,GACT,CAAC,GAoBJ,OACE,2BACGO,OAAOC,KAAKf,GAAcG,KAAIM,IAC7B,MAAM,UAAEE,EAAS,QAAEC,GAAYZ,EAAaS,GAC5C,IAAKE,EAAW,OAAO,KACvB,MAAM,YAAED,EAAW,KAAEM,GAASL,EAC9B,OACE,uBAAKM,IAAKN,EAAUO,IAClB,0BAAKR,EAAYS,OACjB,0BAAKT,EAAYU,MACjB,uBAAKC,wBAAyB,CAAEC,OAAQN,KACvCN,EAAYC,WACX,2BACE,0BAAI,aACJ,0BACGD,EAAYC,UAAUR,KAAI,CAACoB,EAAUC,IACpC,sBAAIP,IAAKO,GACP,yBAAID,GACHX,EAAQT,KAAIsB,IACX,MAAMC,EAAgBD,EAAOT,KAC7B,OACE,uBAAKC,IAAKQ,EAAOP,IACf,8BAASO,EAAOf,YAAYiB,KAAK,KACjC,uBAAKN,wBAAyB,CAAEC,OAAQI,EAAc,aAAYF,EAAQ,OACtE,SAQhB,IAKhB,C","sources":["webpack://le-loop/./src/pages/blog/{markdownRemark.frontmatter__slug}.jsx"],"sourcesContent":["import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport \"../styles/styles.css\"\n\nexport default function BlogPostsTemplate({ data }) {\n  const posts = data.allMarkdownRemark.edges.map(edge => edge.node)\n\n  // Group posts by slug\n  const groupedPosts = posts.reduce((acc, post) => {\n    const slug = post.frontmatter.slug\n    if (!acc[slug]) {\n      acc[slug] = { questions: null, answers: [] }\n    }\n    if (post.frontmatter.questions) {\n      acc[slug].questions = post\n    } else {\n      acc[slug].answers.push(post)\n    }\n    return acc\n  }, {})\n\n  // Parse the HTML content to separate answers\n  // const parseAnswers = (html) => {\n  //   const parsedAnswers = {}\n  //   const parser = new DOMParser()\n  //   const doc = parser.parseFromString(html, 'text/html')\n  //   const headings = doc.querySelectorAll('h3')\n  //   headings.forEach((heading, index) => {\n  //     let nextElement = heading.nextElementSibling\n  //     let answerHTML = ''\n  //     while (nextElement && nextElement.tagName !== 'H3') {\n  //       answerHTML += nextElement.outerHTML\n  //       nextElement = nextElement.nextElementSibling\n  //     }\n  //     parsedAnswers[`Question ${index + 1}`] = answerHTML\n  //   })\n  //   return parsedAnswers\n  // }\n\n  return (\n    <div>\n      {Object.keys(groupedPosts).map(slug => {\n        const { questions, answers } = groupedPosts[slug]\n        if (!questions) return null\n        const { frontmatter, html } = questions\n        return (\n          <div key={questions.id}>\n            <h1>{frontmatter.title}</h1>\n            <h2>{frontmatter.date}</h2>\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n            {frontmatter.questions && (\n              <div>\n                <h3>Questions</h3>\n                <ul>\n                  {frontmatter.questions.map((question, index) => (\n                    <li key={index}>\n                      <p>{question}</p>\n                      {answers.map(answer => {\n                        const parsedAnswers = answer.html\n                        return (\n                          <div key={answer.id}>\n                            <strong>{answer.frontmatter.name}:</strong>\n                            <div dangerouslySetInnerHTML={{ __html: parsedAnswers[`Question ${index + 1}`] }} />\n                          </div>\n                        )\n                      })}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n            questions\n            name\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["BlogPostsTemplate","data","groupedPosts","allMarkdownRemark","edges","map","edge","node","reduce","acc","post","slug","frontmatter","questions","answers","push","Object","keys","html","key","id","title","date","dangerouslySetInnerHTML","__html","question","index","answer","parsedAnswers","name"],"sourceRoot":""}